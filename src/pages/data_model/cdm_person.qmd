
## PERSON

### source.{source_table} (BRONZE)

Structured data sources for person and core demographic information will generally always include:

| Table                                  | Type            |
|----------------------------------------|-----------------|
| Commissioning Datasets                 | Legacy          |
| Patient Information Management Systems | Legacy          |
| Electronic Health Record patient index | Live / ADT feed |
| Individual Observations / Facts        | Legacy + Live   |

Tables are loaded to the database in batches, or through incremental ingestion via connection to a source database.

### bronze.stg__{source_table} (BRONZE)

Each data source is first staged in `stg_{source}__{entity}`. This may include column renaming, SELECT and UNION statements, and edge case handling.

### silver.int_person_identifier_lookup (SILVER)

Due to the large number of patient identification systems found in any hospital, and the possibility of patient id duplication (and subsequent deduplication), we normalise all identifiers (including hospital IDs, NHS numbers, specific system IDs) under a person_uuid that we generate. Note that while NHS numbers are often seen as a canonical identifier, these exhibit significant missingness either due to failure to retrieve from NHS Spine, or because a patient is not registered in the NHS.       

```{mermaid}
---
title: Person Identifier Lookup Table
---
erDiagram
    int__person_identifier_lookup {
        person_uuid uuid "generated for each unique person"
        patient_id varchar50 "patient identifier from source systems"
        patient_id_type varchar50 "type of patient identifier"
        source_table_provenance varchar50 "source table name"
        source_row_id uuid "unique row id for the single concept that is generated at ingestion"
        date_valid date "date of record creation"
        date_invalid date "date of record deprecation (e.g. if lookup no longer valid)"
    }
```

### silver.int__person_birth, silver.int__person_gender, silver.int__person_ethnicity (SILVER)

The source tables which contain patient demographics are a combination of normalised tables, and flat / wide tables, and may be maintained as type 1 or 2 SCD. We normalise patient characteristics found in these tables to enable visibility over changing and/or conflicting information (data handling decisions are pushed to a later stage).

Normalised tables handle core characteristics, that we treat as patient dimensions.

```{mermaid}
---
title: Person Intermediate Tables
---
erDiagram
    int__person_birth {
        person_uuid uuid "[PK] generated for each unique person"
        year_of_birth integer "[not null]"
        month_of_birth integer
        day_of_birth integer
        birth_datetime timestamp
        source_table_provenance varchar50 "source table name"
        source_row_id uuid "unique row id for the single concept that is generated at ingestion"
    }
    int__person_birth ||--|{ int__person_gender : "has gender"
    int__person_gender {
        person_uuid uuid "[FK] int__person_birth"
        gender_source_value varchar20 "gender code from source system"
        gender_source_value_name varchar20 "gender descriptive name from source system"        
        gender_type varchar20 "type of gender (e.g. Epic - phenotypic)"
        source_table_provenance varchar50 "source table name"
        source_row_id uuid "unique row id for the single concept that is generated at ingestion"
        date_valid date "date of record creation"
        date_invalid date "date of record deprecation (e.g. if data item no longer valid)"
    }
    int__person_birth ||--|{ int__person_ethnicity : "has ethnicity"
    int__person_ethnicity {
        person_uuid uuid "[FK] int__person_birth"
        ethnicity_source_value varchar20 "ethnicity code from source system"
        ethnicity_source_value_name varchar20 "ethnicity descriptive name from source system"        
        source_table_provenance varchar50 "source table name"
        source_row_id uuid "unique row id for the single concept that is generated at ingestion"
        date_valid date "date of record creation"
        date_invalid date "date of record deprecation (e.g. if data item no longer valid)"
    }
```

### SILVER - silver.int__person_deprivation

Deprivation is derived from patient postcode. The remaining parts of address are discarded.

```{mermaid}
---
title: Person Intermediate Table (Deprivation)
---
erDiagram
    int__person_birth {
        person_uuid uuid "[PK] generated for each unique person"
        year_of_birth integer "[not null]"
        month_of_birth integer
        day_of_birth integer
        birth_datetime timestamp
        source_table_provenance varchar50 "source table name"
        source_row_id uuid "unique row id for the single concept that is generated at ingestion"
    }
    int__person_birth ||--|{ int__person_deprivation : "has deprivation"
        int__person_deprivation {
        person_uuid uuid "[FK] int__person_birth"
        postcode varchar20 "postcode with space"
        deprivation_decile integer "derived from postcode lookup"        
        index_multiple_deprivation integer "ranked IMD from postcode lookup"
        source_table_provenance varchar50 "source table name"
        source_row_id uuid "unique row id for the single concept that is generated at ingestion"
        date_valid date "date of record creation"
        date_invalid date "date of record deprecation (e.g. if data item no longer valid)"
    }
```

### silver.mrt__person (SILVER)

This is the transformed version of ingested person and demographic tables. This table is wider than the OMOP data model can be further constrained to transform into vanilla OMOP. It contains the following differences from OMOP:

- Standardised concept codes/names are surfaced, and indexed, to enable user-friendly exploration and visualisation without the need for large joins;
- Additional demographic fields for UK specific deprivation are included; 
- OMOP CDM 5.4 columns that are not relevant to the NHS, or to intended purposes, are initialised, but we do not populate. They remain empty when carried into omop.person;
- To populate this, logic is applied to surface the most recent and reliable dimensions based on intermediate tables.    

```{mermaid}
---
title: OMOP-EXT Person
---
erDiagram
    mrt__person {
        person_uuid uuid "[PK] generated for each unique person"
        gender_concept_id integer "[OMOP, not null] standard omop concept"
        gender_concept_code varchar50 "standard concept code"
        gender_concept_name varchar50 "standard concept name"
        year_of_birth integer "[OMOP, not null]"
        month_of_birth integer "[OMOP]"
        day_of_birth integer "[OMOP]"
        birth_datetime timestamp "[OMOP]"
        race_concept_id integer "[OMOP, not null] ethnicity in NHS"
        race_concept_code varchar50 "standard concept code"
        race_concept_name varchar50 "standard concept name"
        deprivation_decile_as_number integer "NHS IMD decile"       
        deprivation_index_as_number integer "NHS IMD ranking"
        ethnicity_concept_id integer "[OMOP] we do not populate this"
        location_id integer "[OMOP] we do not populate this"
        provider_id integer "[OMOP] we do not populate this"
        care_site_id integer "[OMOP] we do not populate this"
        person_source_value varchar50 "[OMOP] contains nhs number where available"
        gender_source_value varchar50 "[OMOP]"
        gender_source_concept_id integer "[OMOP] we do not populate this"
        race_source_value varchar50 "[OMOP]"
        race_source_concept_id integer "[OMOP] we do not populate this"
        ethnicity_source_value varchar50 "[OMOP] we do not populate this"
        ethnicity_source_concept_id integer "[OMOP] we do not populate this"   
    }
```

### omop.person (GOLD, OMOP CDM 5.4)

Central identity management for all persons in the OMOP data model. It contains records that uniquely identify each person or patient, and some demographic information.
```{mermaid}
---
title: OMOP Person Table
---
erDiagram
    person {
        person_id integer "[PK not null]"
        gender_concept_id integer "[not null]"
        year_of_birth integer "[not null]"
        month_of_birth integer
        day_of_birth integer
        birth_datetime timestamp
        race_concept_id integer "[not null] race or ethnicity"
        ethnicity_concept_id integer "[not null] US-specific hispanic vs non-hispanic"
        location_id integer "patient physical address"
        provider_id integer "GP who is primary care provider"
        care_site_id integer "GP surgery for primary care"
        person_source_value varchar50 "nhs number where available"
        gender_source_value varchar50 "biological sex as represented in source"
        gender_source_concept_id integer "mapping to omop, but often empty"
        race_source_value varchar50 "race or ethnicity as represented in source"
        race_source_concept_id integer "mapping to omop, but often empty"
        ethnicity_source_value varchar50 "US-specific as represented in source"
        ethnicity_source_concept_id integer "mapping to omop, but often empty"
    }
```
